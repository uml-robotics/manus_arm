/**
\mainpage
\htmlinclude manifest.html

\b arm is a ROS package for controlling a Manus ARM. The package consists of one
control node and two teleop nodes. You must have a Manus ARM properly connected
and configured in order for this package to be of any use. You must have both
a teleop node and the control node running in order to move the ARM. There is a
node for keyboard teleop and a node for neuron dish activity teleop.

\section codeapi Code API

- Start the ARM control node by creating an \link ArmControl \endlink object.
- Start the dish teleop node by creating a \link TeleopArmDish \endlink object.
- Start the keyboard teleop node by creating a \link TeleopArmKey \endlink object.

- To get an instance of the ARM: \link ManusArm::instance \endlink
- To init the ARM: \link ManusArm::init \endlink
- To move the ARM: \link ManusArm::moveCartesian \endlink and \link ManusArm::moveConstant \endlink
- To check if cartesian movement is finished: \link ManusArm::isMoveComplete \endlink
- To end cartesian movement early: \link ManusArm::setMoveComplete \endlink
- To fold/unfold: \link ManusArm::fold \endlink and \link ManusArm::unfold \endlink
- To get joint positions: \link ManusArm::getPrintState \endlink and \link ManusArm::getCsvState \endlink

\section rosapi ROS API

List of nodes:
- \b arm_control
- \b teleop_arm_dish
- \b teleop_arm_key

<!-- START: copy for each node -->

<hr>

\subsection arm_control arm_control

arm_control controls the ARM. It receives movement commands from teleop nodes
and moves the arm hardware appropriately.

\subsubsection Usage
\verbatim
$ rosrun arm arm_control
\endverbatim


\subsubsection topics ROS topics

Subscribes to:
- \b "cartesian_moves": [arm/cartesian_moves] cartesian movement commands
- \b "constant_moves": [arm/constant_move] constant movement commands
- \b "constant_move_times": [arm/constant_move_time] constant movement by time commands

Publishes to:
- \b N/A

\subsubsection parameters ROS parameters

Reads the following parameters from the parameter server

- \b N/A

Sets the following parameters on the parameter server

- \b N/A


\subsubsection services ROS services
- \b "time_service": [time_server/time_srv] polls system time to keep the node in sync

<!-- END: copy for each node -->

<!-- START: copy for each node -->

<hr>

\subsection teleop_arm_dish teleop_arm_dish

teleop_arm_dish creates movement commands for the arm based on CAT (center of
activity trajectory) data received from the CAT creator node.

\subsubsection Usage
\verbatim
$ rosrun arm teleop_arm_dish
\endverbatim


\subsubsection topics ROS topics

Subscribes to:
- \b "cats": [burst_calc/cat] center of activity trajectories

Publishes to:
- \b "cartesian_moves": [arm/cartesian_moves] cartesian movement commands
- \b "constant_move_times": [arm/constant_move_time] constant movement by time commands

\subsubsection parameters ROS parameters

Reads the following parameters from the parameter server

- \b arm_speed
- \b arm_safe_range
- \b max_range_from_midpoint

Sets the following parameters on the parameter server

- \b N/A


\subsubsection services ROS services
- \b "time_service": [time_server/time_srv] polls system time to keep the node in sync

<!-- END: copy for each node -->

<!-- START: copy for each node -->

<hr>

\subsection teleop_arm_key teleop_arm_key

teleop_arm_key creates movement commands for the arm based on keyboard input.

\subsubsection Usage
\verbatim
$ rosrun arm teleop_arm_key
\endverbatim


\subsubsection topics ROS topics

Subscribes to:
- \b N/A

Publishes to:
- \b "constant_moves": [arm/constant_move] constant movement commands

\subsubsection parameters ROS parameters

Reads the following parameters from the parameter server

- \b N/A

Sets the following parameters on the parameter server

- \b N/A


\subsubsection services ROS services
- \b N/A

<!-- END: copy for each node -->

\section commandline Command-line tools

There are several launch files available to simplify running all of the nodes.
Each launch file has a corresponding parameter file. They are as follows:

- brian_csv.launch
- brian_sim.launch
- csv.launch
- volt_only_brian_csv.launch
- volt_only_brian_sim.launch
- volt_only_csv.launch

\subsection Usage
\verbatim
$ roslaunch [package] [file]
\endverbatim

\par Example

\verbatim
$ roslaunch arm csv.launch
\endverbatim
*/